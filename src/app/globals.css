@import "tailwindcss";
@import "./theme.css";
@import "./base.css";

@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

@layer components {
  body {
    color: var(--color-text);
    background: var(--color-background);
    letter-spacing: var(--tracking-wide);
    font-size: var(--text-sm);

    @variant md {
      font-size: var(--text-base);
    }
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin: 0;
    padding: 0;
    line-height: 1;
  }

  h1 {
    font-size: var(--text-5xl);
    font-weight: var(--font-weight-extrabold);
    color: var(--color-text);

    @variant md {
      font-size: var(--text-6xl);
    }

    @variant lg {
      font-size: var(--text-7xl);
    }
  }

  h2 {
    font-size: var(--text-4xl);
    font-weight: var(--font-weight-semibold);
    color: var(--color-text);
  }

  .qr-code canvas {
    width: 100%;
    max-width: 300px;
  }

  @keyframes loading-skeleton {
    100% {
      transform: translateX(100%);
    }
  }

  .loading-skeleton {
    --animation-duration: 1.5s;
    --animation-direction: normal;
    --pseudo-element-display: block; /* Enable animation */

    background-color: var(--color-skeleton-background);

    width: 100%;
    border-radius: 0.25rem;
    display: inline-flex;
    line-height: 1;

    position: relative;
    user-select: none;
    overflow: hidden;
  }

  .loading-skeleton::after {
    content: " ";
    display: var(--pseudo-element-display);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 100%;
    background-repeat: no-repeat;
    background-image: var(
      --custom-highlight-background,
      linear-gradient(
        90deg,
        var(--color-skeleton-background) 0%,
        var(--color-skeleton-highlight) 50%,
        var(--color-skeleton-background) 100%
      )
    );
    transform: translateX(-100%);

    animation-name: loading-skeleton;
    animation-direction: var(--animation-direction);
    animation-duration: var(--animation-duration);
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
  }

  @media (prefers-reduced-motion) {
    .loading-skeleton {
      --pseudo-element-display: none; /* Disable animation */
    }
  }
}
